# Build it
docker build -t=lakshmankumar/my-dev-box .

# Run it
#  -P                   -> maps random port-numbers of host to all exposed ports.
#  --rm                 -> deletes the container automatically once its stoped (so that the name can be re-used again)
#  --name               -> we always name our container devbox
#  --privileged         -> not sure what privilge is needed
#  -e DISPLAY=$DISPLAY  -> expose our host DISPLAY
#  -v ..:..             -> DISPLAY is useful only with X-11 permissions!
#  -u lakshman          -> start as this user.
#  -t                   -> VERY IMP: give a tty to the container
#  -i                   -> VERY IMP: make the container interactive
#  lakshmankumar/devbox -> use this image.
docker run -P --rm --name devbox --hostname DevBox --privileged -e DISPLAY=$DISPLAY -u lakshman -v /dev:/dev -v /tmp/.X11-unix:/tmp/.X11-unix:ro -v $HOME:/var/shared -t -i lakshmankumar/my-dev-box

#for vpn
docker run -P --rm --name for-vpn --hostname ForVpn --privileged -e DISPLAY=$DISPLAY -u lakshman -v /tmp/.X11-unix:/tmp/.X11-unix:ro -v $HOME:/var/shared -t -i lakshmankumar/my-dev-box

#push the image if its good
docker push lakshmankumar/my-dev-box

centos:
-------

docker build -t=lakshmankumar/ary-centos

docker run -P --rm --name ary-centos -v $HOME:/var/shared -t -i lakshmankumar/ary-centos

Missing stuff:
--------------

TODO:
----

  dbus-x11

  #rtags
  git clone --recursive https://github.com/Andersbakken/rtags.git $HOME/software/rtags
  cd $HOME/software/rtags
  rm -rf build
  mkdir build && cd build
  export LIBCLANG_CXXFLAGS=-I/usr/lib/llvm-3.8/include
  export LIBCLANG_LIBDIR=/usr/lib/llvm-3.8/lib
  cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_INSTALL_PREFIX="/home/lakshman/software/rtags/build/install" ..
  make install
  cd install
  mkdir wrap
  cd wrap
  ln -s ../bin/gcc-rtags-wrapper.sh gcc
  ln -s ../bin/gcc-rtags-wrapper.sh g++

  Update basrc:
  export RTAGS_WRAP_PATH=/home/lakshman/software/rtags/build/install/wrap

  ln -s /home/lakshman/software/rtags/build/install/bin/rc /home/lakshman/bin/
  ln -s /home/lakshman/software/rtags/build/install/bin/rp /home/lakshman/bin/
  ln -s /home/lakshman/software/rtags/build/install/bin/rdm /home/lakshman/bin/

  ln -s ~/.local/bin/ipython3 ~/bin/



Done:
------

  pip install pathlib
  pip install grako
  pip install gmusicapi
  sudo apt-get update
  sudo apt-get install software-properties-common
  sudo apt-get install python-mutagen
  sudo apt-get install python3 python3-pip python3-mutagen
  sudo apt-get install expect
  sudo apt-get install gdb
  sudo apt-get install poppler-utils
  sudo apt-get install gparted dosfstools udev

  sudo apt-get install vpnc
  sudo apt-get install libxss1 libappindicator1 libindicator7
  wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

  sudo apt-get install libxss1 libappindicator1 libindicator7
  wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
  sudo dpkg -i google-chrome*.deb || true
  sudo apt-get install -f
  sudo dpkg -i google-chrome*.deb

-> silversearcher-ag, wireshark
   autojump.
    Install is moved to on-start
  sshfs

sudo add-apt-repository ppa:neovim-ppa/stable
# ******WARNING: WARNING:******* Type sudo pass and press enter
sudo apt-get update
sudo apt-get -y install neovim clang libclang-dev libssl-dev zlib1g-dev asciinema python-software-properties teseq
sudo apt-get -y install vlc

pip install neovim
pip3 install neovim
pip3 install ipython

curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
sudo apt-get -y install nodejs

Discarded:
---------

sudo apt-get -y install gifsicle
sudo npm install --global phantomjs2


References
------------

https://github.com/sameersbn/docker-browser-box
